{"version":3,"sources":["Components/Cards/Cards.js","api/index.js","Components/Charts/Charts.js","Components/Country/Country.js","App.js","index.js","covid19.png"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","country","countryinfected","countryrecovered","countrydeath","className","start","end","value","duration","separator","Date","toDateString","class","url","fetchdata","a","changeableurl","axios","get","fetchdailydata","requireddata","map","dailydata","total","date","reportDate","fetchcountries","countries","name","Charts","useState","setdailydata","useEffect","fetchAPI","linechart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","Country","countrychange","setcountries","align","onChange","e","target","selected","i","key","App","state","fetcheddata","setState","console","log","this","src","image","alt","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.06430c03.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Cards.css';\r\nimport '../css/bootstrap.min.css';\r\nimport CountUp from 'react-countup';\r\n\r\nconst Cards= ({data:{confirmed,recovered,deaths,lastUpdate},country}) =>{\r\n  const countryinfected = `Total Number of people infected in ${country}`;\r\n  const globalinfected = \"Total Number of people who got infected around the world\";\r\n  const countryrecovered = `Total Number of people recovered in ${country}`;\r\n  const globalrecovered = \"Total Number of people who got recovered around the world\";\r\n  const countrydeath = `Total Number of people died in ${country}`;\r\n  const globaldeath = \"Total Number of people who died around the world\";\r\n\tif(!confirmed)\r\n\t{\r\n\t\treturn (\r\n      <div class=\"container\">\r\n        <div className=\"loading\">\r\n        <h1 >Loading....</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n\treturn(\r\n<div className=\"container\">\r\n<div className=\"card-deck\">\r\n  <div className=\"card\">\r\n    <div className=\"card-block infected\">\r\n    <br/><br/>\r\n      <h4 className=\"card-title\">\r\n      Infected People\r\n      </h4>\r\n      <h6 className=\"card-title\">\r\n      <CountUp start={0} end={confirmed.value} duration={1} separator=\",\" />\r\n      </h6>\r\n      <small className=\"card-title\">\r\n      {new Date(lastUpdate).toDateString()}\r\n      </small>\r\n      <br/>\r\n      <small className=\"text-muted\">{country ? countryinfected:globalinfected }</small>\r\n      <br/><br/><br/>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"card\">\r\n    <div className=\"card-block recovered\">\r\n      <br/><br/>\r\n      <h4 className=\"card-title\">\r\n      Recovered People\r\n      </h4>\r\n      <h6 className=\"card-title\">\r\n      <CountUp start={0} end={recovered.value} duration={1} separator=\",\" />\r\n      </h6>\r\n      <small className=\"card-title\">\r\n      {new Date(lastUpdate).toDateString()}\r\n      </small>\r\n      <br/>\r\n      <small className=\"text-muted\">{country ? countryrecovered:globalrecovered }</small>\r\n      <br/><br/><br/>\r\n    </div>\r\n  </div>\r\n\r\n  <div className=\"card\">\r\n    <div className=\"card-block deaths\">\r\n    <br/><br/>\r\n      <h4 className=\"card-title\">\r\n      People who died\r\n      </h4>\r\n      <h6 className=\"card-title\">\r\n      <CountUp start={0} end={deaths.value} duration={1} separator=\",\" />\r\n      </h6>\r\n      <small className=\"card-title\">\r\n      {new Date(lastUpdate).toDateString()}\r\n      </small>\r\n      <br/>\r\n      <small className=\"text-muted\">{country ? countrydeath:globaldeath }</small>\r\n      <br/><br/><br/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n)\r\n\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchdata= async (country) => \r\n{\r\n\tlet changeableurl = url;\r\n\r\n\tif(country)\r\n\t{\r\n\t\tchangeableurl = `${url}/countries/${country}`;\r\n\t}\r\n\ttry{\r\n\r\n\t\tconst {data:{ confirmed,recovered,deaths,lastUpdate}} = await axios.get(changeableurl);\r\n\r\n\t\treturn {confirmed,recovered,deaths,lastUpdate};\r\n\t}\r\n\tcatch (error)\r\n\t{\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const fetchdailydata= async () => \r\n{\r\n\ttry{\r\n\r\n\t\tconst {data} = await axios.get(`${url}/daily`);\r\n\t\tconst requireddata = data.map(\r\n\t\t\t(dailydata)=>\r\n\t\t\t({\r\n\t\t\t\tconfirmed: dailydata.confirmed.total,\r\n\t\t\t\tdeaths: dailydata.deaths.total,\r\n\t\t\t\tdate: dailydata.reportDate,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\treturn requireddata;\r\n\t}\r\n\tcatch (error)\r\n\t{\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport const fetchcountries= async () => \r\n{\r\n\ttry{\r\n\r\n\t\tconst {data:{countries}} = await axios.get(`${url}/countries`);\r\n\t\t\r\n\t\treturn countries.map((country)=>country.name);\r\n\t\t\r\n\t}\r\n\tcatch (error)\r\n\t{\r\n\t\t\r\n\t}\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {fetchdailydata} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport '../css/bootstrap.min.css';\r\n\r\nconst Charts= ({data:{confirmed, recovered, deaths},country}) =>{\r\n\r\n\tconst [ dailydata, setdailydata] = useState([]);\r\n\r\n\r\n\tuseEffect(()=>\r\n\t{\r\n\tconst fetchAPI = async() => {\r\n\r\n\t\tsetdailydata(await fetchdailydata());\r\n\t}\r\n\r\n\tfetchAPI();\r\n\t},[]);\r\n\r\n\tconst linechart=\r\n\t(dailydata.length ? (<Line \r\n\t\tdata= { {\r\n\t\t\tlabels: dailydata.map(({date}) => date),\r\n\t\t\tdatasets : [\r\n\t\t\t\t{\r\n\t\t\t\t\tdata:dailydata.map(({confirmed})=>confirmed),\r\n\t\t\t\t\tlabel : 'Infected',\r\n\t\t\t\t\tborderColor: 'blue',\r\n\t\t\t\t\tfill:true,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tdata:dailydata.map(({deaths})=>deaths),\r\n\t\t\t\t\tlabel : 'Deaths',\r\n\t\t\t\t\tborderColor: 'red',\r\n\t\t\t\t\tfill:true,\r\n\t\t\t\t}\r\n\t\t\t\t\t\t],\r\n\t\t\t\t}\r\n\t\t\t}/>) : null);\r\n\t\t\t\r\n\tconst barChart = (\r\n\t\tconfirmed ? (\r\n\t\t\t<Bar\r\n\t\t\tdata={{\r\n\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t{\r\n\t\t\t\t\tlabel: 'People',\r\n\t\t\t\t\tbackgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n\t\t\t\t\tdata: [confirmed.value, recovered.value, deaths.value],\r\n\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t}}\r\n\t\t\toptions={{\r\n\t\t\t\tlegend: { display: false },\r\n\t\t\t\ttitle: { display: true, text: `Current state in ${country}` },\r\n\t\t\t}}\r\n\t\t\t/>\r\n\t\t) : null\r\n\t\t);\r\n\r\n\treturn(\r\n\t\t<div className=\"container\">\r\n\t\t{country ? barChart:linechart }\r\n\t\t</div>\r\n\t\t)\r\n}\r\nexport default Charts;","import React, { useState, useEffect } from 'react';\r\nimport {fetchcountries} from '../../api';\r\nimport '../css/bootstrap.min.css';\r\n\r\n\r\nconst Country= ({countrychange}) =>{\r\n\r\n\tconst [countries , setcountries] = useState([]);\r\n\r\n\tuseEffect(()=>\r\n\t{\r\n\t\tconst fetchAPI =async () =>{\r\n\t\t\tsetcountries(await fetchcountries());\r\n\t\t}\r\n\r\n\t\tfetchAPI();\r\n\t},[]);\r\n\r\n\treturn (\r\n\t\t<div align=\"center\" className=\"my-4\">\r\n\t\t\t<select  onChange={(e)=>countrychange(e.target.value)}>\r\n\t\t\t<option value=\"\" selected>Global</option>\r\n\t\t\t{countries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Country;","import React from 'react';\nimport {Cards,Country,Charts} from './Components';\nimport {fetchdata} from './api';\nimport './Components/css/bootstrap.min.css';\nimport image from './covid19.png';\n\nclass App extends React.Component{\n\n  state={\n    data:{},\n    country: \"\",\n  }\n  \n  async componentDidMount()\n    {\n    const fetcheddata = await fetchdata();\n    this.setState({data:fetcheddata});\n    }\n\n  countrychange = async (country) =>\n  {\n    const fetcheddata = await fetchdata(country);\n    this.setState({data:fetcheddata, country:country});\n    console.log(fetcheddata);\n  }\n  \n  render(){\n\n    return(\n      <div>\n      <img src={image} alt=\"Image Not Found\" className=\"d-block mx-auto mt-4 pt-4\"></img>\n      <Cards data={this.state.data} country={this.state.country} />\n      <Country countrychange={this.countrychange}/>\n      <Charts data={this.state.data} country={this.state.country}/>\n      <br/><br/><br/>\n      </div>\n      )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render\n(\n    <App/>\n    ,document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}